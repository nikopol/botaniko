botaniko is an IRC Bot "qui plante... ou pas"
(c) niko - under the artistic license  http://www.perlfoundation.org/artistic_license_1_0
alpha version.

requires:

- elasticsearch

features :

- multi channels
- easy way to be personalized, creating a plugin (see lib/botaniko/plugin/*.pm)
- plugin twitter : management of a twitter account (retweet catched url and notice in irc its own timeline)
- plugin url : keep trace of all url indexing them

core commands :

- help [command]
- join #chan1 [#chan2 [...]] : join channels
- leave #chan1 [#chan2 [...]] : leave channels
- load plugin [plugin [...]] : try to load one or more plugins
- mute : turn off all outputs'
- plugins : list loaded plugins
- quit
- search query [from=0] [count=5] [type=tweet|url|...] : search from db
- set variable [value] : get or set a configuration variable
- unload plugin [plugin [...]] : unload one or more plugin
- unmute : turn on all outputs
- uptime : this session delay
- version

plugin twitter commands :

- follow tweetos
- follower [regex] : list followers
- following [regex] : list following
- unfollow tweetos

writing a plugin :

you can easyly setup a default configuration, hook events, 
add commands, and delay/repeat code.
your plugin must be a module under botaniko::plugin::
see lib/botaniko/plugin/*.pm to see samples.

to hook an event:
use botaniko::hook;
hook EVENT=>sub{...};
available event are (with given parameters):
- CONNECT    $cnx
- DISCONNECT $cnx
- MSG        $msg,$user,$from,$chan
- JOIN       $chan
- QUIT       $chan
- USERJOIN   $user,$chan
- USERQUIT   $user,$msg
- NICKCHANGE $old,$new
- TWEET      $msg,$user

to add a command:
use botaniko::command;
command command=>{ help=>"help message", bin=>sub{...}, [root=>1] };

to async code:
use botaniko 'async';
async( cb=>sub{...}, delay=>0, interval=>10);

